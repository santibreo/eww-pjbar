(defwidget metric [label value]
  (box :orientation "v"
       :halign "center"
       :valign "center"
       :class "metric"
    (label :class "label"
           :text label)
    (scale :class "scale"
           :active false
           :orientation "h"
           :value value)))

(defwidget metrics []
  (box :class "metrics" :orientation "h" :space-evenly false :halign "end"
    (metric :label "ðŸ’¾ RAM"
            :value {EWW_RAM.used_mem_perc})
    (metric :label "ðŸ§  CPU"
            :value {EWW_CPU.avg})
    (metric :label "ðŸ’¿ DISK"
            :value {round((1 - (EWW_DISK["/"].free / EWW_DISK["/"].total)) * 100, 0)})
    (metric :label "${EWW_BATTERY.BAT0.capacity >= 15 ? EWW_BATTERY.BAT0.capacity > 80 ? "ðŸ”‹" : "ðŸª«" : "ðŸ’€"} BATTERY"
            :value {EWW_BATTERY.BAT0.capacity})))
